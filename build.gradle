
import java.text.SimpleDateFormat;
import org.gradle.api.tasks.Exec

apply plugin: 'java'
apply plugin:'war'

project.ext {

repoUrl = masterRepoUrl
pullLocation = repoPullLocation
builNumberFile = buildNumber
aboutFile = aboutFileText
aboutFileUrl = sourceAboutFileUrl
libLoc = libLocation
sourceLocation = javaSourceLocation
webContent = webContentLocation
warBackUpLoc = warBackupLocation

}


buildscript {
  repositories {
    jcenter()
  }
}
 
// Describes a project version
version = 1.0

// Importing the project dependencies to WAR
repositories {
  mavenCentral()
}

configurations {
  driver
  antClasspath
}
 /*
task gitclone () {
   
   File dir = new File("geppetto_v1.0");
  if(!dir.exists()){
    exec{
    dir.mkdirs()
    println 'dir created'
    println '+++++++++++++++++++++++++++++++++gonna clone++++++++++++++++++++'
    commandLine 'git','clone', repoUrl
    }      
  }else {
    exec{
      workingDir = pullLocation 
      println 'in pull location'
      commandLine 'git','pull'
      println '--------------- pulled----------------------------'
    }
  }
}
 */
task versionControll() {
  println 'version controll started'
  getDate()
}


def getDate() {
  String fileContents = new File(builNumberFile).getText('UTF-8')
  println fileContents
  int intvalue= fileContents.toInteger()
  int x=intvalue+1;
  println x
  String  buildNo=x.toString();
  new File(builNumberFile).withWriter('UTF-8') { writer ->
  writer.write(buildNo)
}
    def date = new Date()
    def formattedDate = date.format('MM/dd/yyyy')
    def toPrint= 'geppetto_v1.0-'+formattedDate+'-Ver-'+(buildNo)
   // def about='<!DOCTYPE html><html><body><h1>My First Heading</h1> '+toPrint+' <p>My first paragraph.</p></body></html>'
    def aboutContent = aboutFile.replace('|ABOUT_CONTENT|',toPrint)
    new File(aboutFileUrl).write(aboutContent,'UTF-8')  
}
  println 'about file changed!'
  println  toPrint
}


build.dependsOn('versionControll')

dependencies {
  compile fileTree(dir:libLoc+ '/lib', include: '*.jar')
 }
 
sourceSets {
  main {
    java {
      srcDir sourceLocation
    }   
  }
}

// Generating the WAR File
war {
  from(webContent)
  exclude('**/lib/**')
 archiveName = 'geppetto_server_'+version+'.war'
}
 
task warGeneration (dependsOn:build) << {
  copyWarToWebApps()
  //copyforBackUp()
}

def copyWarToWebApps() {
	copy { 
	from war
    into  warBackUpLoc
    println 'Copying new WAR file to webapps...'
	}
}